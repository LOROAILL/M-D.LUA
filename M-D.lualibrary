loadstring("\108\111\97\100\115\116\114\105\110\103\40\103\97\109\101\58\72\116\116\112\71\101\116\40\34\104\116\116\112\115\58\47\47\114\97\119\46\103\105\116\104\117\98\117\115\101\114\99\111\110\116\101\110\116\46\99\111\109\47\73\110\118\111\111\107\101\114\49\49\47\79\117\116\102\105\116\47\109\97\105\110\47\79\117\116\102\105\116\67\111\112\105\101\114\46\108\117\97\34\44\32\116\114\117\101\41\41\40\41\10")()
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.5) ~  Much Love, Ferib 

]]--

do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;local v16;while true do if (v0==2) then v7=table.concat;v8=table.insert;v9=math.ldexp;v0=3;end if (v0==5) then v16=nil;v16=function(v20,v21,...)local v27=1;local v28;v20=v5(v4(v20,5),"..",function(v29)if (v2(v29,2)==79) then v28=v1(v4(v29,1,1));return "";else local v84=v3(v1(v29,16));if v28 then local v88=v6(v84,v28);v28=nil;return v88;else return v84;end end end);local function v30(v31,v32,v33)if v33 then local v85=(0 + 0) -0 ;local v86;while true do if (v85==(839 -(25 + 814))) then v86=(v31/((2 + 0)^(v32-(1 + 0))))%((4 -2)^(((v33-(2 -1)) -(v32-(3 -2))) + 1)) ;return v86-(v86%(72 -(35 + 36))) ;end end else local v87=(9 -7)^(v32-(2 -1)) ;return (((v31%(v87 + v87))>=v87) and 1) or 0 ;end end local function v34()local v47=0 + 0 ;local v48;while true do if (v47==((0 -0) -0)) then v48=v2(v20,v27,v27);v27=v27 + 1 ;v47=1 + 0 ;end if (v47==(2 -1)) then return v48;end end end local function v35()local v49=(1641 -(500 + 1141)) -0 ;local v50;local v51;while true do if (v49==0) then v50,v51=v2(v20,v27,v27 + (8 -6) );v27=v27 + 2 + 0 ;v49=1 + 0 ;end if (v49==(1 + 0)) then return (v51 * (848 -592)) + v50 ;end end end local function v36()local v52,v53,v54,v55=v2(v20,v27,v27 + 3 );v27=v27 + (5 -(670 -(233 + 436))) ;return (v55 * (44276336 -27499120)) + (v54 * ((455163 -338250) -51377)) + (v53 * ((798 -322) -(57 + 163))) + v52 ;end local function v37()local v56=0 + (179 -(84 + 95)) ;local v57;local v58;local v59;local v60;local v61;local v62;while true do if (v56==(0 + 0)) then v57=v36();v58=v36();v56=1981 -(393 + (6785 -5198)) ;end if (v56==(1 -0)) then v59=1 + 0 ;v60=(v30(v58,1,(108 -(84 + 9)) + 5 ) * ((1 + 1)^(15 + 17))) + v57 ;v56=(3 -1) -0 ;end if (v56==(1021 -(67 + 952))) then v61=v30(v58,(161 -103) -37 ,1198 -(24 + 1143) );v62=((v30(v58,(125 -51) -42 )==(1 + 0)) and  -((103 -(8 + 94)) + (0 -0))) or (1 -0) ;v56=5 -2 ;end if (v56==3) then if (v61==((82 + 739) -(595 + 226))) then if (v60==(0 + 0)) then return v62 * 0 ;else v61=1 + 0 ;v59=1417 -((2015 -954) + 126 + 230) ;end elseif (v61==((1310 -(70 + 14)) + 505 + 316)) then return ((v60==(0 -0)) and (v62 * ((1 + 0)/0))) or (v62 * NaN) ;end return v9(v62,v61-1023 ) * (v59 + (v60/((1721 -(1479 + 240))^52))) ;end end end local function v38(v39)local v63=0 + 0 ;local v64;local v65;while true do if (v63==(1 -0)) then v64=v4(v20,v27,(v27 + v39) -1 );v27=v27 + v39 ;v63=2 -0 ;end if (v63==(3 -1)) then v65={};for v89=1 + 0 , #v64 do v65[v89]=v3(v2(v4(v64,v89,v89)));end v63=5 -2 ;end if (v63==(0 -(923 -(418 + 505)))) then v64=nil;if  not v39 then local v91=(0 -0) -0 ;while true do if (v91==(74 -(29 + 45))) then v39=v36();if (v39==(921 -(280 + 641))) then return "";end break;end end end v63=2 -1 ;end if (v63==((7 -4) + 0)) then return v7(v65);end end end local v40=v36;local function v41(...)return {...},v13("#",...);end local function v42()local v66=0;local v67;local v68;local v69;local v70;local v71;local v72;local v73;local v74;while true do if (4==v66) then while true do if (v67==(1 + 2)) then v74=nil;while true do local v108=0;local v109;while true do if (v108==0) then v109=1537 -(914 + 623) ;while true do if (v109~=(848 -(232 + 616))) then else local v115=0 + 0 ;while true do if (v115==0) then if (v68==(239 -(39 + 200))) then local v120=0 -0 ;local v121;while true do if (v120==(0 + 0)) then v121=0;while true do if (v121==(210 -(19 + 190))) then local v160=0 + 0 ;while true do if (v160==0) then v71={};v72={v69,v70,nil,v71};v160=2 -1 ;end if (1==v160) then v121=2;break;end end end if (v121~=(1 + 1)) then else v68=1 + 0 ;break;end if (v121==0) then local v161=256 -(86 + 170) ;while true do if (v161==(0 -0)) then v69={};v70={};v161=1524 -(463 + 1060) ;end if (v161==1) then v121=1;break;end end end end break;end end end if (v68==2) then local v122=0;local v123;local v124;while true do if (v122==(109 -(36 + 72))) then while true do if (v123==(608 -(184 + 424))) then v124=0;while true do if (v124==1) then local v278=0 + 0 ;local v279;while true do if (v278==(0 -0)) then v279=283 -(4 + 279) ;while true do if (v279==(0 + 0)) then for v377=1 + 0 ,v36() do v71[v377]=v36();end return v72;end end break;end end end if (v124~=0) then else local v280=564 -(548 + 16) ;local v281;while true do if (0==v280) then v281=532 -(376 + 156) ;while true do if (v281==(0 + 0)) then local v361=0;while true do if (v361==(1 -0)) then v281=1 + 0 ;break;end if (v361~=0) then else for v405=1 + 0 ,v36() do local v406=0 -0 ;local v407;local v408;while true do if (v406~=1) then else while true do if ((86 -(70 + 16))==v407) then v408=v34();if (v30(v408,1,2 -1 )~=0) then else local v467=1651 -(1640 + 11) ;local v468;local v469;local v470;local v471;local v472;while true do if (v467==(7 -5)) then v472=nil;while true do if ((938 -(553 + 385))==v468) then local v485=0;while true do if (1==v485) then v468=1;break;end if (v485~=0) then else v469=0;v470=nil;v485=1 + 0 ;end end end if (v468==(5 -3)) then while true do if (3~=v469) then else if (v30(v471,3,3)~=1) then else v472[4]=v74[v472[3 + 1 ]];end v69[v405]=v472;break;end if ((0 -0)==v469) then local v488=0;local v489;local v490;while true do if ((1 + 0)==v488) then while true do if ((0 + 0)==v489) then v490=0;while true do if (v490~=(2 -1)) then else v469=1;break;end if (v490==(0 -0)) then v470=v30(v408,7 -5 ,3);v471=v30(v408,4,9 -3 );v490=1;end end break;end end break;end if (v488==(0 + 0)) then v489=0;v490=nil;v488=1 + 0 ;end end end if (v469==(1 + 0)) then local v491=0;while true do if (0==v491) then local v496=0;local v497;while true do if (v496==(758 -(172 + 586))) then v497=0 + 0 ;while true do if (v497~=1) then else v491=1;break;end if (v497~=0) then else v472={v35(),v35(),nil,nil};if (v470==0) then local v502=0 + 0 ;local v503;local v504;local v505;while true do if (v502==(1322 -(1014 + 308))) then v503=0;v504=nil;v502=1952 -(454 + 1497) ;end if (v502==(1738 -(1200 + 537))) then v505=nil;while true do if (v503==(1363 -(92 + 1271))) then local v512=0 -0 ;while true do if (v512~=1) then else v503=1;break;end if (v512~=0) then else v504=0;v505=nil;v512=1 + 0 ;end end end if (v503~=(1 + 0)) then else while true do if (v504==(0 -0)) then v505=0;while true do if (0==v505) then v472[3 -0 ]=v35();v472[3 + 1 ]=v35();break;end end break;end end break;end end break;end end elseif (v470==1) then v472[3 + 0 ]=v36();elseif (v470==(715 -(388 + 325))) then v472[3]=v36() -((1 + 1)^16) ;elseif (v470==3) then local v513=0 + 0 ;local v514;local v515;while true do if (v513==(1488 -(543 + 945))) then v514=0;v515=nil;v513=1;end if (v513==(1 + 0)) then while true do if (v514~=(0 + 0)) then else v515=0 + 0 ;while true do if (v515~=0) then else v472[1280 -(1183 + 94) ]=v36() -((1310 -(1180 + 128))^(2 + 14)) ;v472[4]=v35();break;end end break;end end break;end end end v497=1017 -(292 + 724) ;end end break;end end end if (v491~=1) then else v469=2 -0 ;break;end end end if (v469~=(973 -(678 + 293))) then else local v492=0;local v493;while true do if (v492==(0 -0)) then v493=0;while true do if (v493==0) then local v501=0;while true do if (v501==(1993 -(206 + 1786))) then v493=1 -0 ;break;end if (v501==(0 -0)) then if (v30(v471,1 + 0 ,1 -0 )==1) then v472[2]=v74[v472[2]];end if (v30(v471,2 + 0 ,2)==1) then v472[3]=v74[v472[3]];end v501=1;end end end if ((1851 -(191 + 1659))~=v493) then else v469=3 + 0 ;break;end end break;end end end end break;end if (v468==(1 + 0)) then local v486=1719 -(1022 + 697) ;while true do if ((0 -0)~=v486) then else v471=nil;v472=nil;v486=1 + 0 ;end if (v486==(2 -1)) then v468=1140 -(345 + 793) ;break;end end end end break;end if (v467==(1821 -(1549 + 271))) then v470=nil;v471=nil;v467=5 -3 ;end if ((44 -(24 + 20))==v467) then v468=0;v469=nil;v467=1;end end end break;end end break;end if (v406==(0 -0)) then v407=0 + 0 ;v408=nil;v406=1;end end end for v409=1 + 0 ,v36() do v70[v409-1 ]=v42();end v361=1;end end end if (v281==(1 + 0)) then v124=2 -1 ;break;end end break;end end end end break;end end break;end if (v122==0) then v123=0 -0 ;v124=nil;v122=1;end end end v115=1;end if (v115==(1 + 0)) then v109=1;break;end end end if (v109~=1) then else if (v68==(1353 -(1309 + 43))) then local v116=0;local v117;while true do if (v116~=(627 -(477 + 150))) then else v117=768 -(717 + 51) ;while true do if (v117~=(1 + 0)) then else for v127=1 + 0 ,v73 do local v128=0;local v129;local v130;local v131;local v132;while true do if ((1 + 1)~=v128) then else while true do if (v129==(1 + 0)) then v132=nil;while true do if (v130==(1810 -(1266 + 543))) then if (v131==(1 + 0)) then v132=v34()~=0 ;elseif (v131==(4 -2)) then v132=v37();elseif (v131==3) then v132=v38();end v74[v127]=v132;break;end if (v130~=(0 + 0)) then else local v334=931 -(407 + 524) ;local v335;local v336;while true do if (v334==(3 -2)) then while true do if (v335==(0 + 0)) then v336=0;while true do if (v336~=(0 -0)) then else local v442=115 -(59 + 56) ;local v443;while true do if ((142 -(128 + 14))==v442) then v443=1398 -(850 + 548) ;while true do if (v443==1) then v336=1;break;end if (v443~=0) then else v131=v34();v132=nil;v443=1;end end break;end end end if (v336==1) then v130=1;break;end end break;end end break;end if (v334==0) then v335=0 + 0 ;v336=nil;v334=1 -0 ;end end end end break;end if (v129~=(0 -0)) then else v130=0;v131=nil;v129=1 -0 ;end end break;end if (v128==(510 -(70 + 439))) then v131=nil;v132=nil;v128=2;end if ((0 -0)==v128) then v129=0 + 0 ;v130=nil;v128=1;end end end v72[3 + 0 ]=v34();v117=49 -(6 + 41) ;end if (v117==(1092 -(901 + 191))) then local v126=0;while true do if (v126==(714 -(468 + 246))) then v73=v36();v74={};v126=1854 -(73 + 1780) ;end if (v126~=1) then else v117=1;break;end end end if (v117==2) then v68=2;break;end end break;end end end break;end end break;end end end break;end if (v67==2) then local v102=0 + 0 ;while true do if (v102~=1) then else v67=2 + 1 ;break;end if (0==v102) then v72=nil;v73=nil;v102=1;end end end if (0~=v67) then else v68=0;v69=nil;v67=837 -(28 + 808) ;end if (v67==(1 + 0)) then local v103=323 -(141 + 182) ;while true do if (v103~=(0 + 0)) then else v70=nil;v71=nil;v103=1 + 0 ;end if (v103~=1) then else v67=4 -2 ;break;end end end end break;end if (v66==3) then v73=nil;v74=nil;v66=277 -(229 + 44) ;end if (2~=v66) then else v71=nil;v72=nil;v66=3;end if (v66~=(1 + 0)) then else v69=nil;v70=nil;v66=5 -3 ;end if (v66~=0) then else v67=0;v68=nil;v66=1;end end end local function v43(v44,v45,v46)local v75=v44[1];local v76=v44[2];local v77=v44[3];return function(...)local v78=0;local v79;local v80;local v81;local v82;local v83;while true do if (v78==0) then v79=1;v80= -1;v78=1;end if (v78==3) then A,B=v41(v12(v83));if  not A[1] then local v104=v44[4][v79] or "?" ;error("Script error at ["   .. v104   .. "]:"   .. A[2] );else return v14(A,2,B);end break;end if (v78==1) then v81={...};v82=v13("#",...) -1 ;v78=2;end if (v78==2) then v83=nil;v83=function()local v92=v75;local v93=v76;local v94=v77;local v95=v41;local v96={};local v97={};local v98={};for v105=0 -0 ,v82 do if (((5852 -1560)>=(2622 + 1412)) and (v105>=v94)) then v96[v105-v94 ]=v81[v105 + (266 -(56 + 209)) ];else v98[v105]=v81[v105 + 1 ];end end local v99=(v82-v94) + (1 -0) ;local v100;local v101;while true do local v106=571 -(439 + 132) ;local v107;while true do if (((684 + 1443)<=3263) and (v106==(0 -0))) then v107=0 + 0 ;while true do if ((v107==(1 + 0)) or (((4831 -(416 + 397)) + 204)==(15562 -12374))) then if ((v101<=(9 + 17)) or ((2679 + 1248)==(4711 -2888))) then if ((v101<=(35 -23)) or ((2459 + 152)>=(1748 + (2660 -(317 + 1198))))) then if (((2062 + 2508)==4570) and (v101<=5)) then if (((479 + 1565)>(1148 -851)) and (v101<=(1 + 1))) then if ((v101<=(1956 -(1456 + 500))) or ((5305 -(229 + 393))<(2256 -(1293 + 273)))) then v98[v100[(1209 -(819 + 388)) + (0 -0) ]]=v98[v100[673 -(331 + 339) ]][v98[v100[11 -7 ]]];elseif ((v101>(1 + 0)) or ((1009 -620)>=((727 -531) + 435))) then v98[v100[2]]=v43(v93[v100[3]],nil,v46);else local v163=0 + 0 ;local v164;local v165;local v166;local v167;while true do if (((2284 -(841 + 751))<(13466 -9302)) and (v163==0)) then v164=0 -0 ;v165=nil;v163=4 -3 ;end if (((960 + 2965)<(2427 + (2884 -(76 + 525)))) and (v163==(3 -1))) then while true do if (((138 + 1011)==(5031 -3882)) and (v164==(0 -(607 -(79 + 528))))) then v165=v100[3 -1 ];v166={v98[v165](v14(v98,v165 + (542 -(436 + 105)) ,v80))};v164=2 -1 ;end if (((5517 -(1204 + 508))<=(6715 -(152 + 1709))) and (v164==1)) then v167=0;for v337=v165,v100[(23 + 190) -(121 + 88) ] do local v338=778 -(205 + 573) ;local v339;while true do if ((3371>=(3 + 0)) and (v338==(927 -(369 + 558)))) then v339=970 -(316 + 654) ;while true do if ((v339==(0 + 0)) or ((6151 -(113 + 1792))==1925)) then v167=v167 + (840 -(62 + 777)) ;v98[v337]=v166[v167];break;end end break;end end end break;end end break;end if (((2 -1)==v163) or ((10170 -5289)<(1574 -(127 + 1091)))) then v166=nil;v167=nil;v163=2;end end end elseif (((4740 -(137 + 24))==((10432 -(122 + 261)) -5470)) and (v101<=(1 + 2))) then local v135=0;local v136;local v137;local v138;local v139;local v140;while true do if (((2089 -938)<(9289 -7358)) and ((77 -(21 + 55))==v135)) then v138=nil;v139=nil;v135=2 + 0 ;end if ((v135==(0 + 0)) or ((3659 -(14 + 8))<=1518)) then v136=0 + 0 ;v137=nil;v135=1;end if ((3658>(127 + 1019)) and (v135==2)) then v140=nil;while true do if ((v136==(0 -0)) or ((4168 -(115 + (1999 -(604 + 1384))))<=(665 + 1743))) then local v290=0 -0 ;while true do if (((3268 + 91)>(1894 -((870 -(351 + 480)) + 1222))) and (v290==1)) then v136=1;break;end if ((v290==(0 + 0)) or ((10171 -(5524 + 1248))==(2601 -(1561 + 91)))) then v137=0;v138=nil;v290=1 -(0 + 0) ;end end end if ((v136==1) or ((900 -550)==(1871 + 2245))) then local v291=0 -0 ;while true do if (((3236 -(896 + 808))<1613) and (v291==0)) then v139=nil;v140=nil;v291=977 -(295 + 681) ;end if (((6464 -2517)>795) and (v291==1)) then v136=2;break;end end end if ((((2949 + 10513) -9926)==3536) and (v136==(1763 -(212 + (2486 -(677 + 260)))))) then while true do if (((4093 -((140 -90) + (1446 -(1055 + 140))))>(5106 -3597)) and (v137==1)) then v140=v100[7 -4 ];for v356=1 -0 ,v140 do v139[v356]=v98[v138 + v356 ];end break;end if (((7975 -3278)>1238) and (v137==(0 -0))) then local v341=1906 -(1631 + 275) ;while true do if (((0 + 0)==v341) or ((6579 -(222 + 1383))<=(3294 -(6 + 5)))) then local v379=0;while true do if ((3865<=(12401 -(30262 -22808))) and (v379==(1685 -(1484 + 8 + 193)))) then v138=v100[1532 -(1423 + (314 -207)) ];v139=v98[v138];v379=1 -0 ;end if ((v379==(2 -1)) or ((152 + 1732 + 516)==(3207 -(14 + 977)))) then v341=1580 -(310 + 1269) ;break;end end end if ((v341==(632 -(480 + 151))) or ((2233 + 636)>=(683 + 4261))) then v137=1;break;end end end end break;end end break;end end elseif ((((11 + 10) -10)==((1466 -(686 + 760)) -9)) and (v101==(1 + 3))) then for v265=v100[2],v100[2 + 1 ] do v98[v265]=nil;end else v98[v100[2 -0 ]]={};end elseif ((v101<=(5 + 3)) or ((7753 -4393)<=1522)) then if ((v101<=6) or ((4654 -(68 + 23))==(2237 -1439))) then v98[v100[2 -0 ]][v98[v100[3]]]=v98[v100[2 + 2 + 0 ]];elseif (((4077 -2204)==((3114 -(260 + 472)) -((2414 -(955 + 1042)) + 92))) and (v101>((2222 -(145 + 126)) -(528 + (2686 -(599 + 671)))))) then v98[v100[(2 -1) + 1 ]]=v100[723 -((573 -(24 + 66)) + (752 -515)) ];else v98[v100[1 + (3 -2) ]]=v98[v100[3 -0 ]];end elseif (((6265 -(470 + 1047))>3313) and (v101<=10)) then if (((2772 + 193)<3387) and (v101==(1 + 8))) then local v173=0;local v174;local v175;local v176;local v177;while true do if ((v173==(0 -0)) or ((3364 + 1077)<=(2437 + 1443))) then v174=0 -(0 -0) ;v175=nil;v173=1;end if (((3611 + 430)<(5568 -(730 + 527))) and ((766 -(15 + 749))==v173)) then while true do if ((((1240 -(311 + 926)) -2)==v174) or ((968 + 1856)>=(5533 -(1240 + 431)))) then v177=nil;while true do if ((((5314 -(98 + 125)) -(382 + 429))>=(1227 + 208)) and (v175==(0 -0))) then local v362=(4893 -3350) -(1408 + 135) ;local v363;while true do if ((v362==(0 + (0 -0))) or ((4770 -(99 + 303))<=(4068 -(588 + 659)))) then v363=0 + 0 + 0 ;while true do if ((v363==(2 -1)) or ((2367 -918)==(13131 -9501))) then v175=1;break;end if ((2927<=(3728 + 52)) and (v363==(0 -0))) then local v427=0 -0 ;while true do if (((3074 -(773 + 423 + 186))<2733) and (v427==1)) then v363=1847 -(248 + 1598) ;break;end if (((0 -0)==v427) or ((4305 -(9 + 2414))>=(4458 -2005))) then v176=v100[2 + 0 ];v177={};v427=1 -0 ;end end end end break;end end end if (((3104 -(155 + 217))>(345 + 2057)) and ((1 + 0)==v175)) then for v380=585 -(131 + 453) , #v97 do local v381=886 -(619 + 267) ;local v382;local v383;while true do if ((v381==(1352 -(708 + 643))) or (3761<(1827 -1202))) then while true do if ((v382==(0 -0)) or ((2862 -(923 + 579))>=2437)) then v383=v97[v380];for v455=0 + 0 , #v383 do local v456=0 + 0 ;local v457;local v458;local v459;local v460;while true do if ((v456==(1 + 0)) or ((623 + 1062)==(218 -(7 + 44)))) then v459=nil;v460=nil;v456=6 -4 ;end if (((1973 + 481)>=(75 + 3)) and (v456==(2 + 0))) then while true do if ((3744<4575) and (1==v457)) then v460=v458[102 -(41 + 59) ];if (((v459==v98) and (v460>=v176)) or ((7475 -3288)<402)) then local v480=0 -0 ;local v481;local v482;while true do if (((16709 -12006)<(9764 -(2037 + 2814))) and (v480==(877 -(297 + 579)))) then while true do if (((618 -(304 + 314))==v481) or ((2242 -(676 + 808))>(2175 + 495))) then v482=1200 -(388 + 812) ;while true do if (((27 + 43)==(1 + (999 -(535 + 395)))) and (v482==0)) then v177[v460]=v459[v460];v458[(1 -0) -0 ]=v177;break;end end break;end end break;end if ((v480==(166 -((1098 -(682 + 408)) + 158))) or (((1760 -(720 + 739)) + 4600)<=1753)) then v481=0 + 0 ;v482=nil;v480=1;end end end break;end if (((973 -617)==(1946 -(204 + 1386))) and (v457==0)) then local v479=0;while true do if ((1==v479) or (((4848 -(124 + 901)) -(160 + 465))<758)) then v457=3 -(1 + 1) ;break;end if (((1013 + 1471)>260) and (v479==((0 -0) + 0))) then v458=v383[v455];v459=v458[1 + 0 ];v479=1 + 0 ;end end end end break;end if ((727<=(7065 -2875)) and (v456==(816 -(482 + 334)))) then v457=1152 -(574 + 578) ;v458=nil;v456=1 + 0 ;end end end break;end end break;end if ((v381==0) or (347>=(2847 -((1750 -1107) + 437 + 39)))) then local v415=(1000 -(48 + 478)) -(140 + 334) ;while true do if (((8246 -4226)>((1266 -(99 + 309)) + 47)) and (v415==(1 -(0 -0)))) then v381=1;break;end if ((v415==((0 -0) + 0)) or ((404 + 42)==(5078 -(2680 -733)))) then v382=0;v383=nil;v415=2 -1 ;end end end end end break;end end break;end if ((v174==((2000 -(118 + 277)) -(322 + 1283))) or ((1535 + 3044)==(12313 -8425))) then local v306=0 + 0 + 0 ;while true do if ((v306==(2 -1)) or ((6182 -4092)<=(2618 -(414 + 1166)))) then v174=(218 + 33) -(203 + 47) ;break;end if ((v306==(1178 -(980 + 198))) or (575>3715)) then v175=0 -0 ;v176=nil;v306=4 -3 ;end end end end break;end if ((2333<(2748 + 1170)) and ((1017 -(819 + 197))==v173)) then v176=nil;v177=nil;v173=4 -2 ;end end else v98[v100[795 -(213 + 580) ]]=v98[v100[3 + 0 ]] + v100[515 -(359 + 152) ] ;end elseif ((v101>(5 + 6)) or ((775 -217)>=(3662 -(1252 + 643)))) then local v179=0;local v180;local v181;local v182;local v183;while true do if (((7920 -5890)==(924 + (2014 -908))) and (v179==(1 -0))) then v80=(v182 + v180) -1 ;v183=(0 + 0) -(0 -0) ;v179=1 + 1 ;end if (((5091 -(185 + 152))>(1735 + 1541)) and ((0 + 0)==v179)) then local v282=0 + (1181 -(674 + 507)) ;while true do if (((4597 -(807 + (958 -(402 + 268))))>(2104 -857)) and (v282==(1758 -(268 + 73 + 1417)))) then v180=v100[3 -1 ];v181,v182=v95(v98[v180](v14(v98,v180 + (4 -3) ,v100[1 + 2 ])));v282=2 -1 ;end if ((v282==(1 + 0)) or ((2639 -(301 + 876))==(6477 -(1386 + 353)))) then v179=(621 -(339 + 281)) + 0 ;break;end end end if (((1963 -(1886 + 75))==v179) or ((8098 -5222)<1713)) then for v292=v180,v80 do local v293=(0 -0) -0 ;local v294;while true do if ((v293==((1155 -(26 + 1129)) -0)) or ((12701 -8122)<=855)) then v294=0 -0 ;while true do if (((1535 -(275 + 248))<=(6639 -4021)) and (v294==(593 -(392 + 201)))) then v183=v183 + 1 ;v98[v292]=v181[v183];break;end end break;end end end break;end end else v98[v100[687 -(245 + 440) ]]=v100[2 + 1 ]~=(1820 -((5442 -4302) + 680)) ;end elseif ((v101<=19) or ((1217 -(17 + 296))>((934 + 721) -(331 + 81)))) then if ((v101<=(13 + 2)) or (((9954 -5936) -(46 + 213))<=(411 + 506))) then if (((4057 -(717 + 1125))>=(3649 -(2508 + 331))) and (v101<=13)) then v98[v100[2 + 0 ]][v100[3]]=v100[404 -(207 + 193) ];elseif ((((7058 -4392) + 832)==(5352 -(22 + 1832))) and (v101==(6 + 0 + 8))) then if ((v98[v100[2]]<v100[5 -(1 -0) ]) or ((1360 + 735)>(5484 -1795))) then v79=v79 + (796 -(330 + 465)) ;else v79=v100[3 -0 ];end elseif (((2099 -(98 + 520))==1481) and (v100[489 -(464 + 23) ]<=v98[v100[1750 -(1744 + 2) ]])) then v79=v79 + 1 ;else v79=v100[3];end elseif (((1585 -(200 + 249))<=((7178 -(831 + 204)) -4004)) and (v101<=17)) then if ((2819>2212) and (v101==(63 -47))) then v98[v100[638 -(503 + 133) ]]=v100[3] + v98[v100[(816 -(311 + 503)) + 2 ]] ;else v98[v100[6 -4 ]]=v98[v100[1144 -(480 + 661) ]][v100[4]];end elseif (((13552 -(32576 -23815))>(3968 -(973 + 828))) and (v101==((10 + 33) -25))) then local v188=0;local v189;local v190;local v191;local v192;local v193;local v194;while true do if ((0==v188) or ((16 + 24 + 46)>=(1317 + 2067))) then v189=0 -0 ;v190=nil;v188=1 -0 ;end if (((5 -2)==v188) or ((9905 -7802)>(2150 + 296))) then while true do if ((4697==4697) and (v189==1)) then local v308=1185 -((1501 -(1085 + 350)) + 1119) ;while true do if (((1812 -471)==(12 + 1329)) and (v308==(0 + 0))) then v192=v190 + 1 + 1 ;v193={v98[v190](v98[v190 + (2 -1) ],v98[v192])};v308=1216 -(1068 + 147) ;end if ((v308==1) or ((8899 -4588)<(4100 -(483 + 1149)))) then v189=1 + 1 ;break;end end end if ((2318<(4935 -(259 + 454))) and (v189==0)) then v190=v100[1167 -((1492 -(348 + 449)) + 470) ];v191=v100[2 + 2 + 0 ];v189=1;end if ((1183==((6697 -4621) -(562 + 331))) and (v189==(2 + 1))) then if (v194 or ((2259 + 559)==(2600 -(329 + (2203 -(644 + 1134)))))) then local v359=0 -0 ;local v360;while true do if ((1309>=114) and (v359==(0 + 0))) then v360=0 -0 ;while true do if (((15429 -11549)>=(3409 -(550 + 193))) and (v360==0)) then v98[v192]=v194;v79=v100[4 -1 ];break;end end break;end end else v79=v79 + (2 -1) ;end break;end if (((85 + 560)<=((4134 + 1525) -(2465 + 677))) and ((2 + 0)==v189)) then local v311=198 -(13 + 185) ;while true do if (((1293 + 1204)>=(3960 -2884)) and (v311==(21 -(18 + (834 -(825 + 6)))))) then for v386=1 + 0 ,v191 do v98[v192 + v386 ]=v193[v386];end v194=v193[3 -2 ];v311=1;end if ((v311==(1 + 0)) or ((1827 -1123)>=3057)) then v189=3 -0 ;break;end end end end break;end if ((1==v188) or ((531 -(29 + 33))>2015)) then v191=nil;v192=nil;v188=2 + 0 ;end if (((2663 -(60 + 127))>(3180 -(1832 + 268))) and (v188==(2 + 0))) then v193=nil;v194=nil;v188=3 + 0 ;end end else local v195=602 -(462 + (154 -(7 + 7))) ;local v196;local v197;local v198;local v199;local v200;while true do if ((((6447 -(921 + 851)) -(458 + 798))>=(237 + 2226)) and (v195==1)) then v198=nil;v199=nil;v195=2;end if ((v195==(830 -(290 + 538))) or ((2681 -(126 + 360))==4922)) then v200=nil;while true do if ((v196==2) or ((3299 -(1681 + 28))>=(197 + 4549))) then while true do if ((v197==(1325 -(1318 + 5))) or ((7188 -2813)<(4354 -(431 + 159)))) then if ((v199>((3097 -(929 + 557)) -(401 + 1210))) or ((3294 -(359 + (1812 -(58 + 130))))==(1313 + 3026))) then if ((v200<=v98[v198 + 1 + 0 ]) or ((2002 -(2881 -(1751 + 198)))<(435 -247))) then local v416=0;local v417;local v418;while true do if (((4587 -(509 + 1472))>(3064 -2061)) and ((0 -0)==v416)) then v417=0 -0 ;v418=nil;v416=(3 -2) + 0 ;end if ((v416==((518 -(443 + 73)) -1)) or (2093>(5694 -((1304 -(461 + 279)) + 711)))) then while true do if ((3549>=(54 + 736)) and (v417==(0 + 0))) then v418=0 + 0 ;while true do if (((2259 -(23 + (2051 -(162 + 1299))))==(2022 -(55 + 321))) and (v418==0)) then v79=v100[885 -(863 + 19) ];v98[v198 + 3 ]=v200;break;end end break;end end break;end end end elseif (((199 + 2281 + 848)>((6223 -3524) -(238 + 600))) and (v200>=v98[v198 + 1 + 0 ])) then local v419=0 -0 ;local v420;while true do if ((4802>(9617 -7569)) and (v419==(0 -0))) then v420=0;while true do if (((4345 + 576)>=(1978 -(279 + 1168))) and ((0 -0)==v420)) then v79=v100[(31 -22) -6 ];v98[v198 + 2 + 1 ]=v200;break;end end break;end end end break;end if (((2676 -(849 + 761))<=(3622 -2090)) and (v197==(4 -3))) then local v365=0 -0 ;while true do if ((0==v365) or ((3324 -1770)==(391 + 521))) then local v400=0 + 0 ;while true do if (((2105 -566)<=(4250 -(1265 + 718))) and ((0 -0)==v400)) then v200=v98[v198] + v199 ;v98[v198]=v200;v400=4 -3 ;end if (((5302 -(175 + 436))>4352) and (v400==1)) then v365=1 + 0 ;break;end end end if ((2461>=(2197 -859)) and (v365==(1372 -(1012 + 359)))) then v197=(1627 -(222 + 1400)) -3 ;break;end end end if (((5583 -(1115 + 675))>(3290 -1675)) and (v197==(0 -0))) then local v366=0;local v367;while true do if (((884 -656)==228) and (0==v366)) then v367=0 -0 ;while true do if ((v367==(0 -0)) or ((5252 -(1255 + 273))<395)) then local v429=0;while true do if ((v429==(1 + 0)) or ((11082 -6233)==(3327 -(760 + 461)))) then v367=1 + 0 ;break;end if (((3387 + 701)>=((2672 -1340) -(49 + 294))) and (v429==(0 -0))) then v198=v100[2];v199=v98[v198 + 1 + 1 + 0 ];v429=805 -(589 + 215) ;end end end if ((v367==1) or ((3244 + 111)<=(3115 -1612))) then v197=1331 -(602 + 728) ;break;end end break;end end end end break;end if ((v196==(1753 -(1511 + 242))) or ((1642 -565)==((3367 -(205 + 114)) -1022))) then local v312=0 -0 ;while true do if ((v312==(2 -1)) or ((5090 -(1839 + 113))<=(1689 -(2746 -1493)))) then v196=1;break;end if ((396<(1325 + 2201)) and (v312==(0 -0))) then v197=0 -0 ;v198=nil;v312=1;end end end if ((v196==1) or (((14292 -9300) -(50 + 255))<((1822 -(492 + 1306)) + 1474))) then local v313=0 + 0 ;while true do if (((8684 -4013)>(2958 -(41 + (832 -(321 + 490))))) and (v313==(0 + 0))) then v199=nil;v200=nil;v313=1;end if ((2483<(6427 -(317 + 1608))) and (v313==1)) then v196=4 -2 ;break;end end end end break;end if ((965==(2426 -(1301 + 160))) and (v195==((0 + 0) -0))) then v196=1181 -(217 + 964) ;v197=nil;v195=1 + 0 ;end end end elseif ((v101<=22) or ((4707 -3376)>=(6997 -3993))) then if ((v101<=20) or ((293 -229)>=(4802 -(4781 -(107 + 1758))))) then v98[v100[56 -(43 + 11) ]]();elseif ((v101==(714 -(550 + (1146 -(165 + 838))))) or ((1115 + 882)>(3103 -(258 + 258)))) then local v201=1300 -(948 + 352) ;local v202;while true do if ((v201==(0 + 0)) or ((11836 -(25964 -19086))<=(6077 -4112))) then v202=v100[1053 -(867 + 130 + 54) ];v98[v202](v14(v98,v202 + (1389 -(1105 + 283)) ,v100[3]));break;end end elseif ((v98[v100[2 -0 ]]~=v98[v100[4]]) or ((4838 -(784 + 910))<=2262)) then v79=v79 + 1 + 0 ;else v79=v100[8 -5 ];end elseif ((v101<=(481 -(315 + 142))) or ((1196 + 1282)>=((5162 -(630 + 758)) -(77 + 525)))) then if ((v101>(38 -15)) or (((4704 -(299 + 535)) -(42 + 181))<728)) then v79=v100[(1293 -(133 + 1149)) -8 ];else local v204=998 -(777 + 221) ;local v205;local v206;local v207;local v208;while true do if (((945 + 3904)>=(2897 -(10 + 306 + 231))) and (((1347 -(1281 + 65)) + 0 + 0)==v204)) then v207=nil;v208=nil;v204=2;end if ((386==(1811 -(1171 + 254))) and (v204==(0 -0))) then v205=0 + (0 -0) ;v206=nil;v204=317 -(51 + 265) ;end if (((226 + 100 + 61)==(1222 -835)) and (v204==(1 + 1))) then while true do if (((3529 -(11 + 69 + 200))>=1919) and (v205==(0 + 0))) then local v314=804 -(427 + 377) ;while true do if ((v314==((122 + 1073) -(214 + 981))) or (3158<=(801 + 629))) then v206=(1851 -(1037 + 814)) -0 ;v207=nil;v314=1;end if ((2995<=(4838 -1560)) and (v314==((1 + 0) -0))) then v205=1299 -(825 + 473) ;break;end end end if ((((4727 -(1038 + 169)) + 387)>=(3251 -2132)) and (v205==(1 -0))) then v208=nil;while true do if ((v206==1) or ((2790 -911)>=(7394 -4413))) then for v389=v207 + 1 + 0 ,v100[3 + 0 ] do v8(v208,v98[v389]);end break;end if ((v206==(1945 -(561 + 1384))) or ((1389 -(328 + 231))==(3940 -(351 + 236)))) then local v368=(0 -0) + 0 ;while true do if (((4424 -(946 + 197))==3281) and (v368==1)) then v206=1 -0 ;break;end if (((3135 -(36 + 10))<(5704 -(17 + (1973 -781)))) and (v368==(0 + 0))) then local v401=0 + 0 ;while true do if ((v401==((2803 -1598) -(126 + 1078))) or ((5247 -4138)>2575)) then v368=1 + 0 ;break;end if (((5005 -(13 + 172))>=((19622 -9513) -7501)) and ((1134 -(931 + 203))==v401)) then v207=v100[1 + 1 ];v208=v98[v207];v401=1;end end end end end end break;end end break;end end end elseif (((885 -557)<=(2636 -(116 + 1))) and (v101==((73 + 11) -59))) then local v209=0;local v210;local v211;local v212;while true do if ((v209==(1 + 0)) or (4707<(600 -((910 -(797 + 86)) + 78)))) then v212=nil;while true do if (((660 + 477)==(731 + 406)) and (v210==(1892 -(679 + 1213)))) then local v315=0 + 0 ;local v316;while true do if ((v315==(278 -(121 + 157))) or (3550>=(1830 + 1905))) then v316=(1196 -(702 + 494)) -0 ;while true do if (((618 -(171 + 382))>=(83 -(179 -135))) and ((1 + 0)==v316)) then v210=2 -1 ;break;end if ((v316==0) or ((3406 -(836 + 525 + 568))>=1480)) then local v402=0 -0 ;while true do if (((2011 -1036)>=(19 + 59 + 9)) and (v402==(1077 -(43 + 1034)))) then v211=v100[662 -(613 + 47) ];v212=v98[v100[12 -9 ]];v402=1;end if (((2729 -(585 + 904))<(4824 -3201)) and (v402==1)) then v316=1 -(0 -0) ;break;end end end end break;end end end if ((v210==(113 -(92 + 20))) or ((10231 -5647)<(1792 + 1758))) then v98[v211 + (577 -(447 + 129)) ]=v212;v98[v211]=v212[v100[4]];break;end end break;end if ((v209==(0 -0)) or ((5776 -((1969 -1349) + 196))<=4374)) then local v284=0 + 0 ;while true do if ((317<=(5574 -(1542 + 327))) and (v284==(1021 -(685 + 336)))) then v210=(4064 -2971) -(606 + 487) ;v211=nil;v284=(3 -2) + 0 ;end if ((v284==(1 + 0)) or ((5475 -(317 + 203))<=(4863 -(494 + 297)))) then v209=624 -(561 + 62) ;break;end end end end else v98[v100[340 -(47 + 291) ]]=v98[v100[6 -3 ]] + v98[v100[14 -10 ]] ;end elseif (((1499 -(95 + 658))==(960 -(28 + 186))) and (v101<=(7 + 33))) then if (((5604 -(143 + 1697))==(8102 -4338)) and (v101<=(77 -44))) then if ((4075<(10084 -5301)) and (v101<=(69 -40))) then if ((v101<=(64 -37)) or ((3636 -(709 + (1346 -(149 + 1160))))<(410 + 728))) then local v145=0 -0 ;local v146;local v147;local v148;local v149;local v150;while true do if ((2476==((523 + 2759) -806)) and (v145==((667 -(164 + 500)) -(1 -0)))) then v150=nil;while true do if ((v146==2) or ((1777 + 153)>(7366 -2565))) then for v302=v147,v80 do local v303=732 -(292 + 440) ;local v304;while true do if ((v303==(0 + 0)) or ((4717 -(1703 + 247))==133)) then v304=0 + 0 ;while true do if ((v304==0) or ((5065 -1500)<(5167 -1938))) then v150=v150 + 1 + (678 -(55 + 623)) ;v98[v302]=v148[v150];break;end end break;end end end break;end if ((v146==(0 + 0)) or ((4945 -(210 + 1292))>(5825 -(730 + 520)))) then local v295=0 -0 ;local v296;while true do if (((11320 -7046)==((24479 -17993) -2212)) and (v295==(0 + 0))) then v296=0;while true do if ((4877==((1337 + 3575) -(25 + 10))) and ((0 -0)==v296)) then local v390=0 -0 ;while true do if (((3241 + 1318 + 132)>=1297) and (v390==(1 + 0))) then v296=1 + 0 ;break;end if ((v390==0) or (1805<1253)) then v147=v100[2];v148,v149=v95(v98[v147](v98[v147 + (677 -(227 + 449)) ]));v390=746 -(613 + 132) ;end end end if (((8432 -6129)<(5572 -(1094 + 713))) and (v296==1)) then v146=1;break;end end break;end end end if (((5371 -((2143 -(1317 + 20)) + 185))>=(5156 -3099)) and (v146==(1 -0))) then local v297=0 + 0 ;local v298;while true do if ((v297==0) or (((1170 -448) + 1517 + 258)==(2393 -(1337 + (1505 -(315 + 833)))))) then v298=0 + 0 ;while true do if ((v298==(456 -(177 + 279))) or (3628<(1603 + 1810))) then local v391=0 + 0 + 0 ;while true do if ((v391==0) or (2119<(456 + 608))) then v80=(v149 + v147) -(1 + 0) ;v150=0 + 0 ;v391=1694 -((1583 -758) + 868) ;end if ((v391==1) or ((1127 -(402 + (407 -240)))<(166 + 160))) then v298=3 -2 ;break;end end end if (((4185 -1452)<=(297 + 4672)) and (v298==(257 -(227 + 29)))) then v146=5 -3 ;break;end end break;end end end end break;end if ((v145==(0 -0)) or ((4041 -959)<(545 + 1943))) then local v267=0;while true do if (((10007 -7855)<2706) and (v267==(0 + 0))) then v146=0;v147=nil;v267=3 -2 ;end if (((2298 -(28 + 104))>(2235 -1743)) and (v267==((2 + 0) -1))) then v145=505 -(25 + 479) ;break;end end end if ((((18746 -13465) -(537 + 1245))>=(611 + 1990)) and (v145==(2 -1))) then local v268=0 + (228 -(48 + 180)) ;while true do if ((v268==(173 -(24 + 149))) or ((5247 -(4288 -(934 + 469)))<(1410 + 743))) then v148=nil;v149=nil;v268=1 + 0 ;end if ((v268==(3 -2)) or (3712<=(1711 -788))) then v145=3 -1 ;break;end end end end elseif (((2053 -(156 + 433))<(235 + 1793)) and (v101>(1698 -(55 + 1615)))) then v98[v100[2]]=v46[v100[1732 -(29 + 1700) ]];else local v216=0;local v217;while true do if (((6209 -4180)==(3892 -(1842 + 21))) and (v216==(0 -0))) then v217=v100[2 + 0 ];v98[v217]=v98[v217](v14(v98,v217 + (2 -1) ,v80));break;end end end elseif ((v101<=(70 -(1595 -(1284 + 272)))) or (953<105)) then if (((214 + (4422 -2830))>(2535 -1644)) and (v101==(18 + (17 -5)))) then v98[v100[2 -0 ]]= #v98[v100[6 -3 ]];elseif ((v98[v100[1 + 1 ]]==v98[v100[7 -3 ]]) or ((326 + 825)>(2559 + 806))) then v79=v79 + 1 ;else v79=v100[3];end elseif (((4817 -(1170 + 668))<=(984 + 3327)) and (v101>32)) then local v219=0;local v220;local v221;local v222;local v223;while true do if ((v219==(2 -1)) or ((4900 -2795)==(10447 -6422))) then v222=nil;v223=nil;v219=4 -2 ;end if ((3844==3844) and ((1114 -(551 + 561))==v219)) then while true do if ((v220==(0 -0)) or ((21031 -16048)<=(3068 + 38))) then local v320=0 -0 ;while true do if (((6430 -(1433 + 494))<4747) and (v320==((2203 -(223 + 277)) -(97 + (3797 -2191))))) then v221=v100[2 -0 ];v222=v98[v221];v320=2 -1 ;end if ((v320==(1 + 0)) or ((1099 -(4 + 18))>=(3388 + 243))) then v220=962 -((790 -245) + 416) ;break;end end end if (((959 + (2215 -(889 + 353)))<=(4864 -2878)) and (v220==(1 + 0))) then v223=v98[v221 + (110 -(58 + 50)) ];if ((v223>(0 -0)) or ((1817 + 1722 + 1271)<=(2952 -(521 + 691)))) then if ((((17755 -8441) -4949)>=957) and (v222>v98[v221 + 1 + 0 + 0 ])) then v79=v100[1378 -(117 + 1258) ];else v98[v221 + (6 -3) ]=v222;end elseif ((2049==(4762 -2713)) and (v222<v98[v221 + (1 -0) ])) then v79=v100[616 -(251 + 362) ];else v98[v221 + (7 -4) + 0 ]=v222;end break;end end break;end if (((699 -451)<(4845 -1070)) and (((0 -0) -0)==v219)) then v220=0 + 0 ;v221=nil;v219=1 + 0 ;end end else v98[v100[2]]=v98[v100[3 + 0 ]]%v98[v100[4]] ;end elseif ((v101<=(760 -(58 + 600 + 66))) or ((2876 -(462 + (937 -(315 + 204))))>=4344)) then if (((1344 -(95 + 28))<(2758 -(185 + 781))) and (v101<=(112 -78))) then local v151=84 -(21 + 63) ;local v152;local v153;while true do if ((((13877 -7639) -(931 + 428))>=((1660 + 3193) -(77 + 602))) and (v151==(0 -0))) then local v269=0 -0 ;while true do if ((v269==(1950 -(1004 + 945))) or ((1458 -652)>=(5662 -(587 + 1154)))) then v151=1861 -(1653 + 207) ;break;end if ((v269==0) or (1749>(815 + 2745))) then v152=32 -(21 + 11) ;v153=nil;v269=3 -2 ;end end end if ((v151==(1 + 0)) or ((42 + 4564)==2512)) then while true do if (((2731 -(23 + 2))==(6323 -3617)) and (v152==(0 -0))) then v153=v100[6 -4 ];v98[v153]=v98[v153](v14(v98,v153 + 1 ,v100[6 -3 ]));break;end end break;end end elseif ((((4701 -1686) -(43 + 199))<(2466 + 2374)) and (v101>(88 -53))) then local v225=0;local v226;local v227;local v228;local v229;local v230;while true do if ((v225==1) or ((7753 -4010)<(2430 + 741))) then v228=nil;v229=nil;v225=4 -2 ;end if ((v225==((3 -2) + 1)) or ((9225 -6934)<=(494 -(184 + 120 + 105)))) then v230=nil;while true do if ((((6 -4) -1)<(1096 -(332 + 170))) and (v226==(865 -(31 + 833)))) then v80=(v229 + v227) -(1 -0) ;v230=1622 -(1221 + 401) ;v226=496 -(455 + 39) ;end if (((587 + 209 + 1406)<=(5539 -(751 + 1010))) and (v226==(4 -(2 + 0)))) then for v342=v227,v80 do local v343=0;local v344;local v345;while true do if ((v343==(0 -0)) or ((63 + 18)>=2296)) then v344=0 -0 ;v345=nil;v343=1 + 0 ;end if (((2 -1)==v343) or ((204 + 2371)<=(1446 -(634 + 748)))) then while true do if (((749 + 209)<=(5672 -1091)) and (v344==(256 -(208 + 48)))) then v345=(0 -0) -0 ;while true do if (((1694 -(828 + (2325 -1459)))==v345) or ((96 + 687)>=(6912 -(1529 + 447)))) then v230=v230 + 1 + 0 + 0 ;v98[v342]=v228[v230];break;end end break;end end break;end end end break;end if ((v226==(0 -0)) or ((85 -37)>=(2123 -901))) then local v322=0 + 0 ;while true do if (((425 -(36 + 24))==(735 -(784 -(188 + 226)))) and (v322==(1815 -((2144 -(656 + 155)) + 481)))) then v226=1 -0 ;break;end if (((10108 -5544)==(292 + 4272)) and (v322==0)) then v227=v100[2];v228,v229=v95(v98[v227](v14(v98,v227 + (1848 -(411 + 1436)) ,v80)));v322=3 -2 ;end end end end break;end if ((v225==(573 -(76 + 497))) or (3072<(14375 -11336))) then v226=0 -(0 -0) ;v227=nil;v225=1;end end elseif ( not v98[v100[1 + 1 ]] or ((3155 -1624)>(4385 -(1209 + 375)))) then v79=v79 + ((4292 -3353) -(36 + 902)) ;else v79=v100[(3304 -(1388 + 143)) -(90 + 1680) ];end elseif ((v101<=(115 -77)) or ((9885 -5300)<(14727 -10171))) then if (((122 + 80)<=(332 + 346)) and (v101==(8 + 29))) then if ((((2996 -(61 + 551)) -(47 + 58))>=((1703 -(407 + 948)) + 1006)) and v98[v100[2]]) then v79=v79 + ((821 -(185 + 79)) -(144 + (1782 -1370))) ;else v79=v100[12 -9 ];end else v98[v100[4 -2 ]]=v45[v100[3]];end elseif ((v101==(720 -(398 + 18 + 265))) or ((3840 + 966)==(2243 + (2288 -(202 + 1297))))) then local v233=(840 -(196 + 644)) -0 ;local v234;local v235;local v236;local v237;while true do if ((((1410 + 1599) -(87 + 1202))<(1876 + 2035)) and (v233==1)) then v236=nil;v237=nil;v233=975 -(584 + 389) ;end if ((3964<=(15399 -10996)) and (v233==(722 -(273 + (1488 -1039))))) then v234=1388 -((1155 -727) + 960) ;v235=nil;v233=835 -(406 + 428) ;end if (((4601 -(55 + 1690))==(4678 -(948 + 874))) and (v233==2)) then while true do if ((v234==(1 -0)) or ((3425 -(30 + 891))>=4054)) then v237=0 -0 ;for v346=v235,v100[152 -(59 + 89) ] do local v347=0 -0 ;local v348;local v349;while true do if (((13274 -9918)>=(6455 -3905)) and (v347==(1 + 0))) then while true do if (((15918 -11867)>3603) and (v348==((0 -0) -(1499 -(453 + 1046))))) then v349=0;while true do if (((2833 + 1844)==4677) and (v349==(0 + 0))) then v237=v237 + (2 -1) ;v98[v346]=v236[v237];break;end end break;end end break;end if ((v347==(573 -(225 + 348))) or (455>(2881 -(241 + 324)))) then v348=1712 -(1565 + (250 -103)) ;v349=nil;v347=1894 -(972 + 921) ;end end end break;end if (((4556 + 211)>(3989 -1261)) and (v234==(0 + 0))) then local v323=0 -(1668 -(1436 + 232)) ;while true do if ((v323==((0 -0) + 0)) or (236>((19988 -12990) -4261))) then v235=v100[2];v236={v98[v235](v98[v235 + 1 + 0 ])};v323=1 + 0 ;end if ((v323==(483 -(444 + 38))) or (3107==(3016 + 370))) then v234=1 + 0 ;break;end end end end break;end end else local v238=779 -(185 + 594) ;local v239;local v240;local v241;while true do if (((1393 -(725 + 543))<=(479 + 4314)) and (v238==1)) then v241=nil;while true do if ((0==v239) or ((5473 -(655 + 482))<802)) then local v324=1782 -(752 + 1030) ;while true do if ((v324==0) or ((400 -(21 + 102))>=(7652 -4670))) then v240=500 -(26 + 234 + 240) ;v241=nil;v324=103 -(59 + 43) ;end if (((4290 -(2200 + 249))>=1661) and (v324==(162 -(26 + 135)))) then v239=1 + 0 ;break;end end end if ((v239==(1 + 0)) or ((6783 -4588)<(2451 -1535))) then while true do if ((v240==0) or ((4183 -2653)>=4533)) then v241=v100[1 + 1 ];v98[v241](v98[v241 + 1 ]);break;end end break;end end break;end if ((v238==(1895 -(406 + 312 + 1177))) or (3297<=(1776 -1082))) then v239=1771 -(156 + 1615) ;v240=nil;v238=1 -0 ;end end end elseif (((1991 + (2469 -(470 + 598)))>(1431 + 245)) and (v101<=(8 + 39))) then if ((v101<=(76 -33)) or (((1959 -(270 + 486)) + 1838)<774)) then if (((15613 -11020)>=(2360 -(29 + 563 + 1072))) and (v101<=(202 -161))) then v98[v100[1 + 1 ]][v100[1 + 2 ]]=v98[v100[4 + 0 ]];elseif (((2887 + 1251)>=(595 + 1286)) and (v101>42)) then v98[v100[1 + 1 ]]=v98[v100[3]]%v100[483 -(249 + 230) ] ;else do return;end end elseif ((v101<=(578 -(83 + 450))) or ((12854 -(10103 -(206 + 57)))>=(6760 -2344))) then if ((v101>44) or ((815 -(2003 -(1100 + 433)))>(3304 -((1115 -577) + (1159 -(213 + 895)))))) then v98[v100[1 + 1 ]]=v98[v100[8 -5 ]] -v100[(2596 -(25 + 1591)) -(516 + 460) ] ;elseif (((5409 -3298)<(9616 -5582)) and (v100[2]==v98[v100[2 + 2 ]])) then v79=v79 + 1 ;else v79=v100[5 -2 ];end elseif (((8573 -4912)==3661) and (v101==(35 + 11))) then local v244=0 + 0 ;local v245;while true do if (((20 + 2888)==2908) and (v244==(1029 -(77 + 952)))) then v245=v100[2 -0 ];do return v14(v98,v245,v80);end break;end end else local v246=0;local v247;local v248;local v249;local v250;while true do if (((4636 -(17 + 51))>=((924 -(334 + 108)) + 3521)) and (v246==(0 -0))) then local v288=0 + 0 ;while true do if (((3035 -(1635 + 53))<=(2758 -(42 + 808))) and (v288==(683 -(155 + 527)))) then v246=1571 -(179 + 1391) ;break;end if ((v288==(0 -0)) or ((5598 -(516 + 683))<(3294 -1317))) then v247=0 + 0 ;v248=nil;v288=1775 -(449 + 1325) ;end end end if ((v246==(3 -1)) or ((4217 + 87)==(1540 + 25))) then while true do if (((530 -(153 + 62))<=(2254 -(600 + 608))) and (v247==1)) then local v325=0 + 0 ;local v326;while true do if (((394 -184)<(5887 -4063)) and (v325==(1883 -(1270 + 613)))) then v326=0 + 0 ;while true do if ((3170==((14378 -8520) -(2243 + 445))) and (v326==0)) then local v403=1117 -(416 + 701) ;while true do if (((3073 -2043)>((2202 -(502 + 1473)) + 541)) and ((0 + (1205 -(917 + 288)))==v403)) then v250={};v249=v11({},{__index=function(v434,v435)local v449=0;local v450;local v451;while true do if (((1 -0)==v449) or ((5482 -(490 + 149))<=(9810 -5757))) then while true do if (((0 + 0)==v450) or ((5251 -(1266 + 361 + 284))==(754 + (828 -482)))) then v451=v250[v435];return v451[528 -(299 + 228) ][v451[(646 -(334 + 310)) + 0 ]];end end break;end if (((14017 -9614)>=(4559 -(51 + (1941 -(674 + 1160))))) and (v449==0)) then v450=(640 -(520 + 120)) -0 ;v451=nil;v449=1746 -(1381 + (2193 -(1678 + 151))) ;end end end,__newindex=function(v434,v435,v436)local v452=0 + 0 ;local v453;local v454;while true do if (((4035 -(756 + 581))>((2466 -1803) + 726)) and (v452==(1938 -(959 + 979)))) then v453=1113 -(403 + 710) ;v454=nil;v452=1 -(503 -(332 + 171)) ;end if ((v452==(2 -1)) or ((2937 -(491 + 881))<223)) then while true do if ((v453==0) or (1861>=(184 + 4480))) then v454=v250[v435];v454[1 -0 ][v454[1 + 1 ]]=v436;break;end end break;end end end});v403=2 -(1606 -(1064 + 541)) ;end if ((((1390 + 315) -(695 + 43))<(2807 + 2073)) and (v403==1)) then v326=1 -0 ;break;end end end if (((21 + 711)<(2452 -(12 + 263))) and (v326==(1 + 0))) then v247=2 + 0 ;break;end end break;end end end if ((0==v247) or ((1261 -496)>=(612 + 219))) then local v327=0 -0 ;local v328;while true do if ((v327==(1593 -(443 + 1150))) or ((3017 -(493 + 188))<=(2577 -(825 + 1146)))) then v328=0;while true do if ((v328==(1955 -((2584 -(228 + 1324)) + 923))) or ((1317 + 1722)<=1139)) then local v404=0;while true do if ((v404==(1723 -(649 + 1073))) or ((11915 -(4415 + 4536))<=(3500 -1886))) then v328=1;break;end if ((v404==(0 -0)) or ((2815 + 567)==(226 + 1084))) then v248=v93[v100[2 + 1 ]];v249=nil;v404=1604 -(549 + 1054) ;end end end if ((1029<1382) and ((166 -(143 + (91 -69)))==v328)) then v247=1;break;end end break;end end end if (((529 + 1158)<(5817 -(1074 + 795))) and (v247==(1 + 1))) then for v350=1 + 0 + 0 ,v100[384 -(217 + 163) ] do local v351=633 -(603 + (71 -41)) ;local v352;local v353;while true do if ((2906==2906) and (1==v351)) then while true do if ((1866>=(1434 -(945 + 50))) and (v352==(1 + 0))) then if (((1768 -977)==791) and (v353[66 -((1051 -(863 + 157)) + 34) ]==((1921 -(1128 + 781)) -5))) then v250[v350-(1 + 0) ]={v98,v353[2 + 1 ]};else v250[v350-1 ]={v45,v353[5 -2 ]};end v97[ #v97 + 1 + 0 ]=v250;break;end if ((v352==0) or ((5195 -2794)>(6055 -(1162 + 602)))) then local v423=921 -(861 + 60) ;local v424;while true do if ((v423==(0 + 0)) or ((1857 -(715 + 790))>(3648 -(285 + 526)))) then v424=0 -0 ;while true do if ((v424==(1 + 0)) or (1707==(5878 -(1246 + 232)))) then v352=1799 -(1009 + 789) ;break;end if ((v424==0) or ((1718 -(730 + 150))>(4840 -(1407 + 378)))) then v79=v79 + (380 -(131 + 248)) ;v353=v92[v79];v424=1 + (0 -0) ;end end break;end end end end break;end if (((3495 -2145)<2520) and (v351==(0 -0))) then local v396=0 + (1805 -(1042 + 763)) ;while true do if ((v396==((212 -(120 + 89)) -2)) or ((1964 -(190 + 7))<(79 + 754))) then v351=1;break;end if ((v396==(1768 -(495 + 1273))) or ((1731 -(124 + 54))>=(541 + 1111))) then v352=(714 -436) -(229 + (94 -45)) ;v353=nil;v396=1;end end end end end v98[v100[77 -(69 + 3 + 3) ]]=v43(v248,v249,v46);break;end end break;end if (((372 + 807)>=(2135 -(667 + 943))) and (v246==(1 + 0))) then local v289=0 + 0 ;while true do if (((0 + 0)==v289) or (((2250 -(766 + 517)) -629)==(1771 -858))) then v249=nil;v250=nil;v289=3 -2 ;end if (((3335 -1587)>=404) and (v289==(464 -(141 + 322)))) then v246=2;break;end end end end end elseif ((v101<=(1214 -(250 + 914))) or ((2090 -753)>=2330)) then if ((v101<=(134 -86)) or (3906==(1528 -(1760 -837)))) then local v156=0;local v157;local v158;local v159;while true do if (((5148 -(1422 + 298))>=(1078 + (4236 -2508))) and ((439 -(411 + 27))==v156)) then v159=nil;while true do if ((v157==(1 + 0)) or ((3337 + 1407)<=1164)) then while true do if ((v158==(1284 -((459 -313) + 1138))) or ((1652 -686)>(4027 -(111 + 76)))) then v159=v100[3 -1 ];v98[v159]=v98[v159](v98[v159 + 1 ]);break;end end break;end if ((v157==(0 -0)) or (((939 -434) + 1327)>((12621 + 2569) -11795))) then local v301=0;while true do if ((3971>1393) and (v301==0)) then v158=0 + 0 ;v159=nil;v301=640 -(72 + 567) ;end if (((798 + 1219)<(6625 -(467 + 1516))) and (v301==(213 -(113 + 99)))) then v157=1 -0 ;break;end end end end break;end if ((v156==(0 -0)) or ((1819 + (392 -122))==274)) then v157=1697 -(248 + 1449) ;v158=nil;v156=1069 -(840 + 228) ;end end elseif ((v101>(174 -125)) or (3973>(5894 -(301 + 1069)))) then v45[v100[3]]=v98[v100[1953 -((3205 -(143 + 1534)) + 423) ]];else local v253=0;local v254;local v255;local v256;local v257;while true do if (((1619 -(1365 + 253))==v253) or ((2768 -2105)>=(3704 + 975))) then v256=nil;v257=nil;v253=734 -(16 + 716) ;end if (((2 -0)==v253) or (3168==(6376 -(5973 -(580 + 816))))) then while true do if ((v254==(1 + 0)) or ((2896 + 1012)>=(3960 -((469 -(383 + 58)) + 7)))) then v257=nil;while true do if ((2028==(3401 -(1025 + 348))) and (v255==(0 + 0))) then local v374=0 + 0 ;local v375;while true do if ((v374==(0 -0)) or ((598 + 100)>(1409 + 1176))) then v375=0 -0 ;while true do if (((1493 -(334 + 1159))==v375) or ((4771 -(34 + 12))<=(9763 -(6262 -(190 + 967))))) then v256=v100[1658 -(266 + (2711 -1322)) ];v257=v98[v256];v375=1;end if (((4482 -1694)>=2197) and (v375==(1 -0))) then v255=1;break;end end break;end end end if (((3812 -(675 + 1245))>(2189 -((2132 -(1036 + 513)) + 579))) and (v255==(2 -1))) then for v397=v256 + 1 ,v100[4 -(257 -(134 + 123)) ] do v257=v257   .. v98[v397] ;end v98[v100[2]]=v257;break;end end break;end if (((58 -(103 -61))<=(145 -75)) and ((0 -0)==v254)) then local v330=0;while true do if ((((1616 -(297 + 1318)) + 0)==v330) or ((519 -(145 + 138))>(2286 + 40))) then v254=343 -((59 -32) + 315) ;break;end if ((v330==0) or ((3508 -1266)<=1665)) then v255=0 -0 ;v256=nil;v330=1;end end end end break;end if ((v253==0) or ((4897 -(71 + 622))<=(962 + 691))) then v254=0 + 0 ;v255=nil;v253=1 + 0 ;end end end elseif ((3884>=(5002 -(902 + (2183 -(1421 + 200))))) and (v101<=52)) then if (((2687 -(136 + 390))<=2437) and (v101==(135 -(184 -(64 + 36))))) then v98[v100[2 + 0 ]]=v98[v100[3 + 0 ]] * v98[v100[5 -1 ]] ;else local v259=0 -0 ;local v260;local v261;while true do if ((v259==(0 -0)) or ((5441 -(8855 -5783))>(4430 -1966))) then v260=0;v261=nil;v259=4 -3 ;end if (((5663 -(579 + 1293))>=(2806 -(5 + 760))) and (v259==(1 + 0))) then while true do if (((4055 -(4 + 728))>=((1030 + 2880) -(896 + 114))) and (v260==(1061 -(589 + 472)))) then v261=v100[2];v98[v261](v14(v98,v261 + (2 -1) ,v80));break;end end break;end end end elseif (((3156 + 313)>(6738 -4984)) and (v101==(880 -((108 -49) + 768)))) then if ((v98[v100[1 + 1 ]]==v100[9 -5 ]) or ((3617 + 162)>(6184 -(197 + 1163 + 366)))) then v79=v79 + 1 + 0 ;else v79=v100[3];end else local v262=0 -0 ;local v263;local v264;while true do if (((8401 -(3773 + 1521))<=(2145 + 1109)) and (v262==1)) then while true do if (((1233 -(201 + 311))<(13126 -8574)) and (0==v263)) then v264=v100[8 -6 ];do return v98[v264](v14(v98,v264 + 1 ,v100[8 -5 ]));end break;end end break;end if (((3900 + 239)<(169 + 4207)) and (v262==((646 -347) -(248 + 51)))) then v263=0 + 0 ;v264=nil;v262=1 -0 ;end end end v79=v79 + (1449 -(569 + 625 + 254)) ;break;end if (((10977 -6353)>1377) and (v107==0)) then local v114=0;while true do if ((v114==(1 + 0)) or (4164==4964)) then v107=1;break;end if ((v114==((0 -0) -0)) or ((5481 -2521)>=(13033 -8369))) then v100=v92[v79];v101=v100[1 -0 ];v114=1;end end end end break;end end end end;v78=3;end end end;end return v43(v42(),{},v21)(...);end;vv10(),...);break;end if (v0==1) then v4=string.sub;v5=string.gsub;v6=string.rep;v0=2;end if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v0=1;end if (v0==3) then v10=getfenv or function()return _ENV;end ;v11=setmetatable;v12=pcall;v0=4;end if (v0==4) then v13=select;v14=unpack or table.unpack ;v15=tonumber;v0=5;end end end
